// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  INSTRUCTOR
  CLIENTE
}

model User {
  id             Int      @id @default(autoincrement())
  email          String   @unique
  password       String
  name           String?  // Made optional to handle existing rows
  avatar         String?  // Added avatar field
  role           Role     @default(CLIENTE) // Updated role field to use enum
  isActive       Boolean  @default(true)
  emailVerified  DateTime?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  memberships    Membership[]
  phone          String?  // Added phone field
}

model Class {
  id        String    @id @default(cuid())
  name      String
  instructor String
  level     String
  startTime DateTime
  endTime   DateTime
  capacity  Int
  bookings  Booking[]
}

model Booking {
  id        String   @id @default(cuid())
  userEmail String
  classId   String
  status    String
  startTime DateTime
  endTime   DateTime
  date      DateTime? // Made optional to handle existing rows
  class     Class    @relation(fields: [classId], references: [id])
}

model Membership {
  id         Int      @id @default(autoincrement())
  userId     Int      // Updated userId field to reference User
  plan       String   @default("Barre BÃ¡sico")
  endDate    DateTime // Replaced expiresAt with endDate
  createdAt  DateTime @default(now())

  user       User     @relation(fields: [userId], references: [id])
}
